{"version":3,"sources":["components/UserInput/UserInput.js","App.js","reportWebVitals.js","index.js"],"names":["marked","setOptions","breaks","UserInput","props","state","markdown","submitedText","handleMarkdown","bind","event","this","setState","target","value","__html","parse","className","id","onChange","dangerouslySetInnerHTML","handleMarkdownParse","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gTAIAA,SAAOC,WAAW,CACdC,QAAQ,IAGZ,IAuFeC,E,kDAnDX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,SAvCY,ytBAwCZC,aAAc,IAGlB,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBAPR,E,kDAWlB,SAAgBC,GACZC,KAAKC,SACD,CAACN,SAAUI,EAAMG,OAAOC,U,iCAKhC,WAEI,MAAO,CAAEC,OADcf,SAAOgB,MAAML,KAAKN,MAAMC,a,oBAKnD,WAEI,OACI,sBAAKW,UAAU,YAAf,UACI,sBAAKA,UAAU,OAAf,UACI,yDACA,0BAAUC,GAAG,SAASD,UAAU,kBAAkBE,SAAUR,KAAKH,eAAgBM,MAAOH,KAAKN,MAAMC,cAKvG,sBAAKW,UAAU,OAAf,UACI,yDACA,qBAAKC,GAAG,UAAUD,UAAU,mBAAmBG,wBAAyBT,KAAKU,kC,GAvCzEC,IAAMC,WCvBfC,MAff,WACE,OACE,sBAAKP,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,yDAGF,sBAAMA,UAAU,WAAhB,SACE,cAAC,EAAD,UCAOQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.724666cf.chunk.js","sourcesContent":["import React from 'react';\nimport { marked } from 'marked';\nimport './UserInput.scss'\n\nmarked.setOptions({\n    breaks: true,\n})\n\nconst defaultPlaceholder = `# This is a Markdown Converter #\n## Start typing some Markdown to see your converted result! ##\nThis converter has been built using **React** and the library [Marked](https://cdnjs.com/libraries/marked)  \n\nWith Markdown you can write anything: \n\n- titles\n- paragraphs\n- lists\n- quotes\n\nAnd also include: \n\n- images\n- tables\n- etc.\n\nYou can write something simple like  \\`# Hello World! # \\`  \n\nOr more complex code like:\n\n\\`\\`\\`\n\n//This is a multiline code: \n\n    # I love cats! #\n    My favourite cats are: \n        1.Birman Cats\n        2.Singapura Cats  \n\n\\`\\`\\`\n![Birdman Cat](https://cdn.pixabay.com/photo/2021/02/24/20/38/cat-6047457_1280.png)\n>\"Don't wait any more and start coding!\" â€“ Cat`\n\nclass UserInput extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            markdown : defaultPlaceholder,\n            submitedText: '',\n        }\n\n        this.handleMarkdown = this.handleMarkdown.bind(this);\n       \n    }\n\n    handleMarkdown (event){\n        this.setState(\n            {markdown: event.target.value}\n        )\n        \n    }\n\n    handleMarkdownParse(){\n        const parsedMarkdown = marked.parse(this.state.markdown);\n        return { __html: parsedMarkdown };\n       \n    }\n\n    render(){\n\n        return(\n            <div className='container'>\n                <div className='item'>\n                    <h1>Introduce some Markdown</h1>\n                    <textarea id='editor' className='textarea editor' onChange={this.handleMarkdown} value={this.state.markdown}></textarea>\n                    \n                  \n                </div>\n\n                <div className='item'>\n                    <h1>Your Converted Markdown</h1>\n                    <div id='preview' className='textarea preview' dangerouslySetInnerHTML={this.handleMarkdownParse()}>\n                    </div>\n                </div>\n\n\n            </div>\n\n\n        )\n    }\n\n\n}\n\nexport default UserInput;","\nimport './App.scss';\nimport UserInput from './components/UserInput/UserInput';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>The Markdown Previewer</p>\n      </header>\n\n      <main className='App-main'>\n        <UserInput />\n      </main>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}